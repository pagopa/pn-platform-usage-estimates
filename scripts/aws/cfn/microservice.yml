AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of alarm topic

  # Heath Check parameters
  HealthCheckInterval:
    Description: Seconds between two health check
    Type: Number
    Default: 60

  MemoryAmount:
    Type: String
    Default: 2GB
    Description: memory amount reserved to the task pod.
    AllowedValues: [ 2GB, 4GB, 6GB, 8GB ]

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  # Autoscaling parameters
  AutoscalingCheckPeriod:
    Default: 60
    Type: Number
    Description: minimum autoscaling number of tasks\

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: activate when N datapoint on M

  AutoscalingThreshold:
    Default: 70
    Type: String

  MinTasksNumber:
    Default: 1
    Type: Number
    Description: minimum autoscaling number of tasks

  MaxTasksNumber:
    Default: 6
    Type: Number
    Description: maximum autoscaling number of tasks

  HealthCheckTimeout:
    Description: health check timeout seconds
    Type: Number
    Default: 5

  HealthyThresholdCount:
    Description: |
      The number of consecutive health checks successes required before considering
      an unhealthy target healthy.
    Type: Number
    Default: 5

  UnhealthyThresholdCount:
    Description: |
      The number of consecutive health check failures required before considering a target unhealthy.
    Type: Number
    Default: 2

  CpuValue:
    Type: Number
    Default: 1024
    Description: Fargate virtual CPU quantity 1024 equals one vCPU

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for WEB rest API.'
  
  CorsAllowedDomains:
    Type: String
    Description: 'Comma separated list of domains allowed to make cross origin request'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: ''
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'
  
  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'
  
  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'
  
  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  EstimateUsageBucketName:
    Type: String
    Description: 'Name of S3 bucket'

  EstimateDynamoTableName:
    Type: String
    Description: 'Name of dynamodb table containing request'

  EstimateDynamoTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing request'

  ProfilationDynamoTableName:
    Type: String
    Description: 'Name of dynamodb table containing request'

  ProfilationDynamoTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing request'

  ActivityReportDynamoTableName:
    Type: String
    Description: 'Name of dynamodb table containing request'

  ActivityReportDynamoTableArn:
    Type: String
    Description: 'ARN of dynamodb table containing request'

  AppName:
    Type: String
    Default: 'platform-usage-estimates-be'
    Description: App Name

  # Batch properties
  ComputeResourceType:
    Type: String
    Default: FARGATE_SPOT
    AllowedValues:
      - FARGATE_SPOT
      - FARGATE
    Description: Enter FARGATE_SPOT or FARGATE.
  ScheduleExpression:
    Type: String
    Description: 'Schedule rule expression'
  MaxvCpus:
    Type: String
    Default: 128
    Description: The maximum number of Amazon EC2 vCPUs that an environment can reach.

  VCPU:
    Type: String
    Default: 0.25
    Description: The number of vCPUs reserved for the container.

  Memory:
    Type: String
    Default: 2048
    Description: The memory hard limit (in MiB) present to the container.

  BatchJobMaxAttempts:
    Type: Number
    Default: 1
    Description: 'The maximum number of batch job attempts.'

  SandboxSafeStorageBaseUrl:
    Type: String
    Description: 'Url to the SafeStorage microservice'

  SafeStorageCxId:
    Type: String
    Description: 'SafeStorage cx-id'

  DataVaultBaseUrl:
    Type: String
    Description: 'DataVault BaseUrl'

Resources:

  ## JobQueue
  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: !Sub '${AppName}-job-queue'

  ## Compute Environment
  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ServiceRole: !Ref BatchServiceRole
      ComputeEnvironmentName: !Sub '${AppName}-compute-environment'
      ComputeResources:
        MaxvCpus: !Ref MaxvCpus
        Type: !Ref ComputeResourceType
        SecurityGroupIds:
          - !Ref BatchSecurityGroup
        Subnets: !Split [ ",", !Ref SubnetsIds ]
      State: ENABLED

  ## Service Role for batch
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: batch.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole

  BatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Batch Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

  ## Job Definition
  ## https://docs.aws.amazon.com/batch/latest/userguide/fargate.html#fargate-job-definitions
  BatchDeanonimizingJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      PropagateTags: true
      JobDefinitionName: !Sub '${AppName}-job-definition'
      ContainerProperties:
        Image: !Ref ContainerImageUri
        FargatePlatformConfiguration:
          PlatformVersion: LATEST
        ResourceRequirements:
          - Value: !Ref VCPU
            Type: VCPU
          - Value: !Ref Memory
            Type: MEMORY
        JobRoleArn: !GetAtt "BatchTaskExecutionRole.Arn"
        ExecutionRoleArn: !GetAtt "BatchTaskExecutionRole.Arn"
        Environment:
          - Name: BATCHMODE
            Value: 'batch'
          - Name: AWS_REGIONCODE
            Value: !Sub ${AWS::Region}
          - Name: PN_PLATFORMUSAGEESTIMATES_QUEUEDATALAKE
            Value: 'data-lake-queue'
          - Name: AWS_DYNAMODBESTIMATETABLE
            Value: !Sub ${EstimateDynamoTableName}
          - Name: AWS_DYNAMODBPROFILATIONTABLE
            Value: !Sub ${ProfilationDynamoTableName}
          - Name: AWS_DYNAMODBACTIVITYREPORTTABLE
            Value: !Sub ${ActivityReportDynamoTableName}
      PlatformCapabilities:
        - FARGATE
      Tags:
        Service: Batch
        Name: JobDefinitionTag
        Expected: MergeTag

  BatchTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AppName}-taskexec-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ "sts:AssumeRole" ]
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: Allow
                Action:
                  - 'dynamodb:BatchGetItem'
                  - 'dynamodb:BatchWriteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:Query'
                  - 'dynamodb:TransactGetItems'
                  - 'dynamodb:TransactWriteItems'
                  - 'dynamodb:UpdateItem'
                Resource:
                  - !Sub "${EstimateDynamoTableArn}"
                  - !Sub "${EstimateDynamoTableArn}/*"
                  - !Sub "${ProfilationDynamoTableArn}"
                  - !Sub "${ProfilationDynamoTableArn}/*"
                  - !Sub "${ActivityReportDynamoTableArn}"
                  - !Sub "${ActivityReportDynamoTableArn}/*"

  ### Event Rule setup ###
  ScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AppName}-batch-schedule-role'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ events.amazonaws.com ]
            Action: [ "sts:AssumeRole" ]
      Path: /
      Policies:
        - PolicyName: !Sub '${AppName}-batch-schedule-policy'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "batch:SubmitJob"
                Resource: "*"

  ScheduledRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "ScheduledRule"
      ScheduleExpression: !Ref ScheduleExpression
      State: "ENABLED"
      Targets:
        - Arn:
            Fn::GetAtt:
              - "JobQueue"
              - "JobQueueArn"
          RoleArn: !GetAtt "ScheduleRole.Arn"
          Id: !Sub '${AppName}-TargetBatchQueue'
          BatchParameters:
            JobDefinition: !Ref BatchDeanonimizingJobDefinition
            JobName: !Sub '${AppName}-rule-job'
            RetryStrategy:
              Attempts: !Ref BatchJobMaxAttempts


# PN-Platform-usage-estimates microservice
  PlatformUsageEstimatesMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-platform-usage-estimates'
        CpuValue: !Ref CpuValue
        MemoryAmount: !Ref MemoryAmount
        HealthCheckTimeout: !Ref HealthCheckTimeout
        HealthCheckInterval: !Ref HealthCheckInterval
        HealthyThresholdCount: !Ref HealthyThresholdCount
        UnhealthyThresholdCount: !Ref UnhealthyThresholdCount
        AutoscalingStrategy: REST-API
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Sub '${ContainerImageUri}'
        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'CORS_ALLOWED_DOMAINS=${CorsAllowedDomains}, http://localhost:3000, https://portale-pa.dev.pn.pagopa.it'
        ContainerEnvEntry3: !Sub 'AWS_DYNAMODBESTIMATETABLE=${EstimateDynamoTableName}'
        ContainerEnvEntry4: !Sub 'AWS_DYNAMODBPROFILATIONTABLE=${ProfilationDynamoTableName}'
        ContainerEnvEntry5: !Sub 'PN_PLATFORMUSAGEESTIMATES_CLIENTEXTERNALREGISTRIESBASEPATH=http://${ApplicationLoadBalancerDomain}:8080'
        ContainerEnvEntry6: !Sub 'AWS_BUCKET_NAME=${EstimateUsageBucketName}'
        ContainerEnvEntry8: !Sub 'AWS_DYNAMODBACTIVITYREPORTTABLE=${ActivityReportDynamoTableName}'
        ContainerEnvEntry9: !Sub 'PN_PLATFORMUSAGEESTIMATES_CLIENTSAFESTORAGEBASEPATH=${SandboxSafeStorageBaseUrl}'
        ContainerEnvEntry10: !Sub 'PN_PLATFORMUSAGEESTIMATES_SAFESTORAGECXID=${SafeStorageCxId}'
        ContainerEnvEntry11: !Sub 'PN_PLATFORMUSAGEESTIMATES_CLIENTDATAVAULTBASEPATH=${DataVaultBaseUrl}'
        ContainerEnvEntry12: !Sub 'PN_PLATFORMUSAGEESTIMATES_QUEUEDATALAKE=data-lake-queue'
        ContainerEnvEntry13: !Sub
          - 'PN_PLATFORMUSAGEESTIMATES_JOBQUEUENAME=${JobQueueArn}'
          - JobQueueArn: !Ref JobQueue
        ContainerEnvEntry14: !Sub
          - 'PN_PLATFORMUSAGEESTIMATES_JOBDEFINITIONNAME=${JobDefinitionArn}'
          - JobDefinitionArn: !Ref BatchDeanonimizingJobDefinition
        MappedPaths: '/pn-usage-estimates/*'
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref SubnetsIds
        VpcId: !Ref VpcId
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        TaskRoleManagedPolicyArn: !Ref PlatformUsageEstimatesMicroserviceTaskPolicy

  PlatformUsageEstimatesMicroserviceTaskPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:*
            Resource:
              - !Sub arn:aws:s3:::${EstimateUsageBucketName}
              - !Sub arn:aws:s3:::${EstimateUsageBucketName}/*
          - Effect: Allow
            Action:
              - batch:Describe*,
              - batch:List*,
              - batch:SubmitJob
            Resource:
              - !Ref JobQueue
              - !Ref BatchDeanonimizingJobDefinition
          - Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ExecuteTransaction
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:Query
              - dynamodb:TransactGetItems
              - dynamodb:TransactWriteItems
              - dynamodb:UpdateItem
            Resource:
              - !Sub "${EstimateDynamoTableArn}"
              - !Sub "${EstimateDynamoTableArn}/*"
              - !Sub "${ProfilationDynamoTableArn}"
              - !Sub "${ProfilationDynamoTableArn}/*"
              - !Sub "${ActivityReportDynamoTableArn}"
              - !Sub "${ActivityReportDynamoTableArn}/*"

  PlatformUsageEstimatesMicroserviceCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-platform-usage-estimates"
        RestApiStageArns: !Join
          - ','
          - - !GetAtt PlatformUsageEstimatesGateway.Outputs.RestApiStageArn
        RestApiNames: !Join
          - ','
          - - !GetAtt PlatformUsageEstimatesGateway.Outputs.RestApiName
        AlarmArns: !Join
          - ','
          - - !GetAtt PlatformUsageEstimatesMicroservice.Outputs.FatalLogsMetricAlarmArn
            - !GetAtt PlatformUsageEstimatesGateway.Outputs.RestApiErrorAlarmArn
            - !GetAtt PlatformUsageEstimatesGateway.Outputs.RestApiLatencyAlarmArn
        LogGroupsNames: !Join
          - ','
          - - !Sub '/aws/ecs/${ProjectName}-platform-usage-estimates'


  PlatformUsageEstimatesGateway:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-expose-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-platform-usage-estimates-bo'
        IntendedUsage: BACKOFFICE
        DnsName: !Ref WebApiDnsName
        ProjectName: !Ref ProjectName
        ServiceApiPath: 'platform-usage-estimates'
        NetworkLoadBalancerLink: !Ref NetworkLoadBalancerLink
        ApplicationLoadBalancerDomain: !Ref ApplicationLoadBalancerDomain
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        OpenApiBucketName: !Ref MicroserviceBucketName
        OpenApiBucketKey: !Sub ${MicroserviceBucketBaseKey}/docs/openapi/api-internal-v1.yaml

  # Expose PN-Usage-platform-estimates microservice public API with API-GW for WEB usage
  PlatformUsageEstimatesMicroservicePublicWebAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-expose-service-openapi.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-platform-usage-estimates'
        IntendedUsage: WEB
        DnsName: !Ref WebApiDnsName
        ProjectName: !Ref ProjectName
        ServiceApiPath: 'pn-usage-estimates'
        NetworkLoadBalancerLink: !Ref NetworkLoadBalancerLink
        ApplicationLoadBalancerDomain: !Ref ApplicationLoadBalancerDomain
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        OpenApiBucketName: !Ref MicroserviceBucketName
        OpenApiBucketKey: !Sub ${MicroserviceBucketBaseKey}/docs/openapi/aws/api-pn-usage-estimates-WEB-aws.yaml

  PlatformUsageEstimatesMicroservicePublicWebApiWaf:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-waf-acl.yaml"
      Parameters:
        WAFName: !Sub '${ProjectName}-platform-usage-estimates-web'
        IntendedUsage: WEB
        APIGatewayARNs: !GetAtt PlatformUsageEstimatesMicroservicePublicWebAPI.Outputs.APIGatewayARN
        Limit: 6000

