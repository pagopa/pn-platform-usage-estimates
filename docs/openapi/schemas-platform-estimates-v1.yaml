components:
  schemas:
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          type: integer
          format: int32
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: 2022-07-27T12:22:33.444Z
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors

    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: 'body.order.item[2].quantity'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code

    EstimateDetail:
      type: object
      properties:
        paInfo:
          $ref: '#/components/schemas/PAInfo'
        billing:
          $ref: '#/components/schemas/Profilation'
        estimate:
          $ref: '#/components/schemas/Estimate'
      allOf:
        - $ref: '#/components/schemas/Period'
      required:
        - paInfo
        - billing
        - status
        - referenceMonth
        - estimate
        - showEdit

    Estimate:
      type: object
      properties:
        totalDigitalNotif:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        total890Notif:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        totalAnalogNotif:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
      required:
        - totalDigitalNotif
        - total890Notif
        - totalAnalogNotif

    EstimateCreateBody:
      type: object
      allOf:
        - $ref: '#/components/schemas/Estimate'
        - $ref: '#/components/schemas/Profilation'

    EstimatePeriod:
      type: object
      properties:
        estimate:
          $ref: '#/components/schemas/Estimate'
        billing:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/Period'

    EstimateHistory:
      type: object
      allOf:
        - $ref: '#/components/schemas/Period'

    PageableEstimateResponseDto:
      type: object
      properties:
        actual:
          $ref: '#/components/schemas/EstimatePeriod'
        history:
          $ref: '#/components/schemas/Page'
      additionalProperties: false
      required:
        - content

    PAInfo:
      type: object
      properties:
        paId:
          type: string
          example: '12345678900'
          format: '/^[0-9]{11}$/'
          maxLength: 32
        paName:
          type: string
          example: 'Comune di Roma'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        taxId:
          type: string
          example: '3242214145'
          format: '/^[0-9]{11}$/'
          maxLength: 32
        registeredOffice:
          type: string
          example: 'piazza gaeaulenti 56, Milano'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        pec:
          type: string
          example: 'test@pec.it'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        ipaCode:
          type: string
          example: 'abc12324'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        sdiCode:
          type: string
          example: 'abc1334324'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32

    Period:
      type: object
      properties:
        status:
          type: string
          enum: [ VALIDATED, DRAFT, ABSENT ]
        deadlineDate:
          type: string
          format: date
        referenceMonth:
          type: string
        lastModifiedDate:
          type: string
          format: date
        showEdit:
          type: boolean
      required:
        - status
        - referenceMonth
        - deadlineDate
        - showEdit

    ProfilationCreateBody:
      type: object
      allOf:
        - $ref: '#/components/schemas/Profilation'

    ProfilationPeriod:
      type: object
      properties:
        profilation:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'

    ProfilationHistory:
      type: object
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'

    PageForProfilation:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProfilationHistory'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
          maximum: 1
          minimum: 1
        totalPages:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages

    PageableProfilationResponseDto:
      type: object
      properties:
        actual:
          $ref: '#/components/schemas/ProfilationPeriod'
        history:
          $ref: '#/components/schemas/PageForProfilation'
      additionalProperties: false
      required:
        - content

    ProfilationDetail:
      type: object
      properties:
        paInfo:
          $ref: '#/components/schemas/PAInfo'
        profilation:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'

    PeriodForProfilation:
      type: object
      properties:
        status:
          type: string
          enum: [ VALIDATED, DRAFT, ABSENT ]
        deadlineDate:
          type: string
          format: date
        referenceYear:
          type: string
        lastModifiedDate:
          type: string
          format: date
        showEdit:
          type: boolean
      required:
        - status
        - referenceYear
        - deadlineDate
        - showEdit

    Profilation:
      type: object
      properties:
        splitPayment:
          type: boolean
          example: 'true'
        description:
          type: string
          example: 'altre info'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        mailAddress:
          type: string
          example: 'test@comune.milano.it'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
      required:
        - splitPayment
        - mailAddress

    ListReports:
      type: array
      items:
        $ref: '#/components/schemas/ReportDTO'
      maxItems: 999999999
      minItems: 1

    PageableDeanonymizedFilesResponseDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/FilePage'
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReportDTO'
          maxItems: 999999999
          minItems: 1
      additionalProperties: false
      required:
        - content

    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
        pageNumber:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageSize:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
      additionalProperties: false

    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
      additionalProperties: false

    Page:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/EstimateHistory'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
          maximum: 1
          minimum: 1
        totalPages:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages

    FilePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReportDTO'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: integer
          format: int32
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
          format: int32
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: integer
          format: int64
          maximum: 1
          minimum: 1
        totalPages:
          type: integer
          format: int64
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages

    ReportStatusEnum:
      type: string
      enum:
        - DEANONIMIZING
        - RAW
        - ENQUEUED
        - READY
        - ERROR

    ReportDTO:
      type: object
      properties:
        paId:
          type: string
          example: 'A12C34D56789E0'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        reportKey:
          type: string
          example: 'A12C34D56789E0'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        reportZipKey:
          type: string
          example: 'A12C34D56789E0'
          format: '/[^A-Za-z0-9]+/'
          maxLength: 32
        url:
          type: string
          example: 'http://file.com'
        referenceMonth:
          type: string
        lastModifiedDate:
          type: string
          format: date
        errorMessage:
          type: string
        action:
          type: string
        status:
          $ref: "#/components/schemas/ReportStatusEnum"



  parameters:
    pathPaId:
      name: paId
      in: path
      required: true
      schema:
        type: string

    pathReportKey:
      name: reportKey
      in: path
      required: true
      schema:
        type: string

    OriginFe:
      name: originFe
      schema:
        type: string
        enum:
          - PN-PLATFORM-NOTIFICATION-FE
          - PN-HELPDESK-FE
      in: header
      required: true

    queryPaId:
      name: paId
      in: query
      required: false
      schema:
        type: string

    queryTaxId:
      name: taxId
      in: query
      required: false
      schema:
        type: string

    queryIpaId:
      name: ipaId
      in: query
      required: false
      schema:
        type: string

    queryStatus:
      name: status
      in: query
      required: true
      schema:
        type: string
        enum:
          - VALIDATED
          - DRAFT

    queryDeanonymizationStatus:
      name: status
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/ReportStatusEnum"


    queryFileType:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - SOURCE
          - TARGET

    pathReferenceMonth:
      name: referenceMonth
      in: path
      required: true
      example: "MAR-2023"
      schema:
        type: string

    pathReferenceYear:
      name: referenceYear
      in: path
      required: true
      schema:
        type: string

    querySizePage:
      name: size
      in: query
      description: Numero di elementi per pagina.
      required: false
      schema:
        type: integer
        default: 5
        format: int32
        maximum: 999999999
        minimum: 1

    queryNumberPage:
      name: page
      in: query
      description: Risultati di pagina che si vuole ottenere (0..N)
      required: false
      schema:
        type: integer
        default: 0
        format: int32
        maximum: 999999999
        minimum: 0

  responses:
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not found
    Invalid:
      description: Bad Request
    NotAllowed:
      description: Method not allowed
    InternalError:
      description: Internal Server Error
    Unauthorized:
      description: Unauthorized
              