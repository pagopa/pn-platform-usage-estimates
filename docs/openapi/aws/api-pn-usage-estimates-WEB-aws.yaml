openapi: 3.0.1
info:
  title: >-
    ${stageVariables.ProjectName}-${stageVariables.MicroServiceUniqueName}-${stageVariables.IntendedUsage}
  version: rL2YyojQeCb1BPEhD2lF/9w6c8ecYxN/dn94W1HgGbU=
servers:
  - url: https://${stageVariables.DnsName}/{basePath}
    variables:
      basePath:
        default: /${stageVariables.ServiceApiPath}
    x-amazon-apigateway-endpoint-configuration:
      disableExecuteApiEndpoint: true
paths:
  /{paId}/estimate/{referenceMonth}:
    post:
      tags:
        - Estimate
      operationId: createOrUpdateEstimate
      x-api-permissions:
        - estimate-write
      summary: Inserimento o modifica di una stima.
      description: API che consente di aggiungere o di modificare i dettagli di una stima.
      parameters:
        - $ref: '#/components/parameters/queryStatus'
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceMonth'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstimateCreateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatePeriod'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/estimate/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{paId}/estimate/{referenceMonth} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/estimate/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{paId}/estimate/{referenceMonth}/validated:
    get:
      tags:
        - Estimate
      operationId: validated
      x-api-permissions:
        - estimate-read
      summary: Validazione stima.
      description: API che consente di modificare lo stato di una stima.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceMonth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatePeriod'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/estimate/{referenceMonth}/validated
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{paId}/estimate/{referenceMonth}/validated API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/estimate/{referenceMonth}/validated
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /estimates:
    get:
      tags:
        - Estimate
      operationId: getAllEstimate
      x-api-permissions:
        - estimate-read
      summary: >-
        ritorna elenco di stime in base alla partita iva, al nome della pa o al
        codice Ipa.
      description: API che estrae la lista di stime
      parameters:
        - $ref: '#/components/parameters/OriginFe'
        - $ref: '#/components/parameters/queryPaId'
        - $ref: '#/components/parameters/queryTaxId'
        - $ref: '#/components/parameters/queryIpaId'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableEstimateResponseDto'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimates
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /estimates API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimates
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /estimate/{paId}/detail/{referenceMonth}:
    get:
      tags:
        - Estimate
      operationId: getEstimateDetail
      x-api-permissions:
        - estimate-read
      summary: >-
        ritorna il dettaglio delle stime in base al mese di riferimento e al
        paId.
      description: API che ritorna il dettaglio di una stima.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceMonth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateDetail'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimate/{paId}/detail/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /estimate/{paId}/detail/{referenceMonth} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimate/{paId}/detail/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{paId}/reports/{referenceMonth}:
    get:
      tags:
        - Report
      operationId: getAllReportFile
      x-api-permissions:
        - estimate-read
      summary: >-
        estrae tutti i consuntivi delle stime associate al paId e al mese di
        riferimento.
      description: API che consente di estrarre l'elenco fatture delle stime.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceMonth'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReports'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/reports/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{paId}/reports/{referenceMonth} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/reports/{referenceMonth}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceMonth: method.request.path.referenceMonth
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /estimate/{paId}/reports/{reportKey}:
    get:
      tags:
        - Report
      operationId: downloadReportFile
      x-api-permissions:
        - estimate-read
      summary: Download file di un report
      description: >-
        API che consente il download del file di un report relativo alla
        reportKey.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReportKey'
        - $ref: '#/components/parameters/queryFileType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportDTO'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimate/{paId}/reports/{reportKey}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.reportKey: method.request.path.reportKey
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /estimate/{paId}/reports/{reportKey} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/estimate/{paId}/reports/{reportKey}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.reportKey: method.request.path.reportKey
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /reports/{paId}:
    get:
      tags:
        - Report
      operationId: getAllDeanonymizedFiles
      x-api-permissions:
        - estimate-read
      summary: ritorna elenco di file deanonimizzati in base al paId e allo stato.
      description: API che estrae la lista di file deanonimizzati.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/queryDeanonymizationStatus'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableDeanonymizedFilesResponseDto'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/reports/{paId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /reports/{paId} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/reports/{paId}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /reports/{paId}/schedule/{reportKey}:
    get:
      tags:
        - Report
      operationId: getScheduleDeanonymizedFiles
      x-api-permissions:
        - estimate-read
      summary: >-
        rischedula il caricamento dell'elenco elenco di file deanonimizzati in
        base al paId e al reportKey.
      description: API che rischedula la lista di file deanonimizzati.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReportKey'
      responses:
        '200':
          description: OK
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/reports/{paId}/schedule/{reportKey}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.reportKey: method.request.path.reportKey
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /reports/{paId}/schedule/{reportKey} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/reports/{paId}/schedule/{reportKey}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.reportKey: method.request.path.reportKey
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{paId}/profilation/{referenceYear}:
    post:
      tags:
        - Profilation
      operationId: createOrUpdateProfilation
      x-api-permissions:
        - profilation-write
      summary: salva o aggiorna i dati della profilazione.
      description: API che salva o aggiorna i dettagli della profilazione.
      parameters:
        - $ref: '#/components/parameters/queryStatus'
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceYear'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilationCreateBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilationPeriod'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/profilation/{referenceYear}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{paId}/profilation/{referenceYear} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/profilation/{referenceYear}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /profilations:
    get:
      tags:
        - Profilation
      operationId: getAllProfilations
      x-api-permissions:
        - profilation-read
      summary: >-
        Ritorna elenco di profilazioni in base alla partita iva, al nome della
        pa o al codice Ipa.
      description: API che estrae la lista di profilazioni
      parameters:
        - $ref: '#/components/parameters/queryPaId'
        - $ref: '#/components/parameters/queryTaxId'
        - $ref: '#/components/parameters/queryIpaId'
        - $ref: '#/components/parameters/queryNumberPage'
        - $ref: '#/components/parameters/querySizePage'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableProfilationResponseDto'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/profilations
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /profilations API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/profilations
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters: {}
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /profilation/{paId}/detail/{referenceYear}:
    get:
      tags:
        - Profilation
      operationId: getProfilationDetail
      x-api-permissions:
        - profilation-read
      summary: >-
        ritorna il dettaglio della profilazione in base al paId e al
        referenceYear.
      description: API che ritorna il dettaglio della profilazione.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceYear'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilationDetail'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/profilation/{paId}/detail/{referenceYear}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /profilation/{paId}/detail/{referenceYear} API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/profilation/{paId}/detail/{referenceYear}
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
  /{paId}/profilation/{referenceYear}/validated:
    get:
      tags:
        - Profilation
      operationId: validatedProfilation
      x-api-permissions:
        - profilation-read
      summary: Validazione profilazione.
      description: API che consente di modificare lo stato di una profilazione.
      parameters:
        - $ref: '#/components/parameters/pathPaId'
        - $ref: '#/components/parameters/pathReferenceYear'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfilationPeriod'
        '400':
          description: Errore di validazione sintattica della richiesta
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/NotAllowed'
        '500':
          $ref: '#/components/responses/InternalError'
      security:
        - pn-auth-fleet_jwtAuthorizer_openapi: []
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/profilation/{referenceYear}/validated
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.header.x-pagopa-pn-cx-id: context.authorizer.cx_id
          integration.request.header.x-pagopa-pn-cx-role: context.authorizer.cx_role
          integration.request.header.x-pagopa-pn-uid: context.authorizer.uid
          integration.request.header.x-pagopa-pn-jti: context.authorizer.cx_jti
          integration.request.header.x-pagopa-pn-src-ch: '''WEB'''
          integration.request.header.x-pagopa-pn-cx-type: context.authorizer.cx_type
          integration.request.header.x-pagopa-pn-cx-groups: context.authorizer.cx_groups
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
    options:
      operationId: Options for /{paId}/profilation/{referenceYear}/validated API CORS
      x-amazon-apigateway-integration:
        uri: >-
          http://${stageVariables.ApplicationLoadBalancerDomain}:8080/${stageVariables.ServiceApiPath}/{paId}/profilation/{referenceYear}/validated
        connectionId: ${stageVariables.NetworkLoadBalancerLink}
        httpMethod: ANY
        requestParameters:
          integration.request.path.paId: method.request.path.paId
          integration.request.path.referenceYear: method.request.path.referenceYear
        passthroughBehavior: when_no_match
        connectionType: VPC_LINK
        timeoutInMillis: 29000
        type: http_proxy
components:
  parameters:
    queryStatus:
      name: status
      in: query
      required: true
      schema:
        type: string
        enum:
          - VALIDATED
          - DRAFT
    pathPaId:
      name: paId
      in: path
      required: true
      schema:
        type: string
    pathReferenceMonth:
      name: referenceMonth
      in: path
      required: true
      example: MAR-2023
      schema:
        type: string
    OriginFe:
      name: originFe
      schema:
        type: string
        enum:
          - PN-PLATFORM-NOTIFICATION-FE
          - PN-HELPDESK-FE
      in: header
      required: true
    queryPaId:
      name: paId
      in: query
      required: false
      schema:
        type: string
    queryTaxId:
      name: taxId
      in: query
      required: false
      schema:
        type: string
    queryIpaId:
      name: ipaId
      in: query
      required: false
      schema:
        type: string
    queryNumberPage:
      name: page
      in: query
      description: Risultati di pagina che si vuole ottenere (0..N)
      required: false
      schema:
        type: number
        default: 0
        maximum: 999999999
        minimum: 0
    querySizePage:
      name: size
      in: query
      description: Numero di elementi per pagina.
      required: false
      schema:
        type: number
        default: 5
        maximum: 999999999
        minimum: 1
    pathReportKey:
      name: reportKey
      in: path
      required: true
      schema:
        type: string
    queryFileType:
      name: type
      in: query
      required: true
      schema:
        type: string
        enum:
          - SOURCE
          - TARGET
    queryDeanonymizationStatus:
      name: status
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ReportStatusEnum'
    pathReferenceYear:
      name: referenceYear
      in: path
      required: true
      schema:
        type: string
  schemas:
    Estimate:
      type: object
      properties:
        totalDigitalNotif:
          type: number
          maximum: 999999999
          minimum: 1
        total890Notif:
          type: number
          maximum: 999999999
          minimum: 1
        totalAnalogNotif:
          type: number
          maximum: 999999999
          minimum: 1
      required:
        - totalDigitalNotif
        - total890Notif
        - totalAnalogNotif
    Profilation:
      type: object
      properties:
        splitPayment:
          type: boolean
          example: 'true'
        description:
          type: string
          example: altre info
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        mailAddress:
          type: string
          example: test@comune.milano.it
          format: /[^A-Za-z0-9]+/
          maxLength: 32
      required:
        - splitPayment
        - mailAddress
    EstimateCreateBody:
      type: object
      allOf:
        - $ref: '#/components/schemas/Estimate'
        - $ref: '#/components/schemas/Profilation'
    Period:
      type: object
      properties:
        status:
          type: string
          enum:
            - VALIDATED
            - DRAFT
            - ABSENT
        deadlineDate:
          type: string
          format: date
        referenceMonth:
          type: string
        lastModifiedDate:
          type: string
          format: date
        showEdit:
          type: boolean
      required:
        - status
        - referenceMonth
        - deadlineDate
        - showEdit
    EstimatePeriod:
      type: object
      properties:
        estimate:
          $ref: '#/components/schemas/Estimate'
        billing:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/Period'
    ProblemError:
      properties:
        code:
          description: Internal code of the error, in human-readable format
          example: >-
            PN_PARAMETER_TOO_LONG | PN_PARAMETER_TOO_SHORT | PN_DUPLICATE_ENTRY
            | etc...
          type: string
        element:
          description: Parameter or request body field name for validation error
          example: body.order.item[2].quantity
          type: string
        detail:
          description: >-
            A human readable explanation specific to this occurrence of the
            problem.
          example: Parameter not valid
          maxLength: 1024
          type: string
      required:
        - code
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: number
          example: 503
          maximum: 600
          minimum: 100
          exclusiveMaximum: true
        title:
          description: >-
            A short, summary of the problem type. Written in english and
            readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,4096}$
          type: string
        traceId:
          description: Internal support identifier associated to error
          example: 123e4567-e89b-12d3-a456-426614174000
          type: string
        timestamp:
          description: date and time referred to UTC
          example: '2022-07-27T12:22:33.444Z'
          type: string
          format: date-time
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      required:
        - status
        - errors
    EstimateHistory:
      type: object
      allOf:
        - $ref: '#/components/schemas/Period'
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
      additionalProperties: false
    Pageable:
      type: object
      properties:
        offset:
          type: number
          maximum: 999999999
          minimum: 1
        pageNumber:
          type: number
          maximum: 999999999
          minimum: 1
        pageSize:
          type: number
          maximum: 999999999
          minimum: 1
        paged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        unpaged:
          type: boolean
      additionalProperties: false
    Page:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/EstimateHistory'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: number
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: number
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: number
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: number
          maximum: 1
          minimum: 1
        totalPages:
          type: number
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages
    PageableEstimateResponseDto:
      type: object
      properties:
        actual:
          $ref: '#/components/schemas/EstimatePeriod'
        history:
          $ref: '#/components/schemas/Page'
      additionalProperties: false
      required:
        - content
    PAInfo:
      type: object
      properties:
        paId:
          type: string
          example: '12345678900'
          format: /^[0-9]{11}$/
          maxLength: 32
        paName:
          type: string
          example: Comune di Roma
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        taxId:
          type: string
          example: '3242214145'
          format: /^[0-9]{11}$/
          maxLength: 32
        registeredOffice:
          type: string
          example: piazza gaeaulenti 56, Milano
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        pec:
          type: string
          example: test@pec.it
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        ipaCode:
          type: string
          example: abc12324
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        sdiCode:
          type: string
          example: abc1334324
          format: /[^A-Za-z0-9]+/
          maxLength: 32
    EstimateDetail:
      type: object
      properties:
        paInfo:
          $ref: '#/components/schemas/PAInfo'
        billing:
          $ref: '#/components/schemas/Profilation'
        estimate:
          $ref: '#/components/schemas/Estimate'
      allOf:
        - $ref: '#/components/schemas/Period'
      required:
        - paInfo
        - billing
        - status
        - referenceMonth
        - estimate
        - showEdit
    ReportStatusEnum:
      type: string
      enum:
        - DEANONIMIZING
        - RAW
        - ENQUEUED
        - READY
        - ERROR
    ReportDTO:
      type: object
      properties:
        paId:
          type: string
          example: A12C34D56789E0
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        reportKey:
          type: string
          example: A12C34D56789E0
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        reportZipKey:
          type: string
          example: A12C34D56789E0
          format: /[^A-Za-z0-9]+/
          maxLength: 32
        url:
          type: string
          example: http://file.com
        referenceMonth:
          type: string
        lastModifiedDate:
          type: string
          format: date
        errorMessage:
          type: string
        action:
          type: string
        status:
          $ref: '#/components/schemas/ReportStatusEnum'
    ListReports:
      type: array
      items:
        $ref: '#/components/schemas/ReportDTO'
      maxItems: 999999999
      minItems: 1
    FilePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReportDTO'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: number
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: number
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: number
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: number
          maximum: 1
          minimum: 1
        totalPages:
          type: number
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages
    PageableDeanonymizedFilesResponseDto:
      type: object
      allOf:
        - $ref: '#/components/schemas/FilePage'
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReportDTO'
          maxItems: 999999999
          minItems: 1
      additionalProperties: false
      required:
        - content
    ProfilationCreateBody:
      type: object
      allOf:
        - $ref: '#/components/schemas/Profilation'
    PeriodForProfilation:
      type: object
      properties:
        status:
          type: string
          enum:
            - VALIDATED
            - DRAFT
            - ABSENT
        deadlineDate:
          type: string
          format: date
        referenceYear:
          type: string
        lastModifiedDate:
          type: string
          format: date
        showEdit:
          type: boolean
      required:
        - status
        - referenceYear
        - deadlineDate
        - showEdit
    ProfilationPeriod:
      type: object
      properties:
        profilation:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'
    ProfilationHistory:
      type: object
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'
    PageForProfilation:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProfilationHistory'
          maxItems: 999999999
          minItems: 1
        empty:
          type: boolean
        first:
          type: boolean
        last:
          type: boolean
        number:
          type: number
          maximum: 999999999
          minimum: 1
        numberOfElements:
          type: number
          maximum: 999999999
          minimum: 1
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: number
          maximum: 1024
          minimum: 1
        sort:
          $ref: '#/components/schemas/Sort'
        totalElements:
          type: number
          maximum: 1
          minimum: 1
        totalPages:
          type: number
          maximum: 999999999
          minimum: 1
      additionalProperties: false
      required:
        - number
        - numberOfElements
        - size
        - totalElements
        - totalPages
    PageableProfilationResponseDto:
      type: object
      properties:
        actual:
          $ref: '#/components/schemas/ProfilationPeriod'
        history:
          $ref: '#/components/schemas/PageForProfilation'
      additionalProperties: false
      required:
        - content
    ProfilationDetail:
      type: object
      properties:
        paInfo:
          $ref: '#/components/schemas/PAInfo'
        profilation:
          $ref: '#/components/schemas/Profilation'
      allOf:
        - $ref: '#/components/schemas/PeriodForProfilation'
  responses:
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
    NotFound:
      description: Not found
    NotAllowed:
      description: Method not allowed
    InternalError:
      description: Internal Server Error
  securitySchemes:
    pn-auth-fleet_jwtAuthorizer_openapi:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri: >-
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:pn-jwtAuthorizerLambda/invocations
        authorizerResultTtlInSeconds: 300
        identityValidationExpression: ^Bearer\s([a-zA-Z0-9_]+)\.([a-zA-Z0-9_]+)\.([a-zA-Z0-9_\-]+)$
        type: token
tags:
  - null
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_PARAMETERS",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
    responseTemplates:
      application/json: >-
        {"status": 400, "title": "VALIDATION ERROR", "traceId":
        "$context.xrayTraceId", "errors": [ { "code": "PN_INVALID_BODY",
        "detail": "Validation errors: $context.error.validationErrorString" } ]}
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
  params-only:
    validateRequestBody: false
    validateRequestParameters: true
x-amazon-apigateway-request-validator: basic
